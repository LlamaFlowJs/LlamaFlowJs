"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3843],{44987:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>h,contentTitle:()=>d,default:()=>u,frontMatter:()=>l,metadata:()=>c,toc:()=>m});var r=n(65723),s=n(43327),t=n(15120);const i='import { LlamaParseReader, VectorStoreIndex } from "llamaflowjs";\n\nasync function main() {\n  // Load PDF using LlamaParse\n  const reader = new LlamaParseReader({ resultType: "markdown" });\n  const documents = await reader.loadData("../data/TOS.pdf");\n\n  // Split text and create embeddings. Store them in a VectorStoreIndex\n  const index = await VectorStoreIndex.fromDocuments(documents);\n\n  // Query the index\n  const queryEngine = index.asQueryEngine();\n  const response = await queryEngine.query({\n    query: "What is the license grant in the TOS?",\n  });\n\n  // Output response\n  console.log(response.toString());\n}\n\nmain().catch(console.error);\n',o='import {\n  LlamaParseReader,\n  SimpleDirectoryReader,\n  VectorStoreIndex,\n} from "llamaflowjs";\n\nasync function main() {\n  const reader = new SimpleDirectoryReader();\n\n  const docs = await reader.loadData({\n    directoryPath: "../data/parallel", // brk-2022.pdf split into 6 parts\n    numWorkers: 2,\n    // set LlamaParse as the default reader for all file types. Set apiKey here or in environment variable LLAMA_CLOUD_API_KEY\n    overrideReader: new LlamaParseReader({\n      language: "en",\n      resultType: "markdown",\n      parsingInstruction:\n        "The provided files is Berkshire Hathaway\'s 2022 Annual Report. They contain figures, tables and raw data. Capture the data in a structured format. Mathematical equation should be put out as LATEX markdown (between $$).",\n    }),\n  });\n\n  const index = await VectorStoreIndex.fromDocuments(docs);\n\n  // Query the index\n  const queryEngine = index.asQueryEngine();\n  const response = await queryEngine.query({\n    query:\n      "What is the general strategy for shareholder safety outlined in the report? Use a concrete example with numbers",\n  });\n\n  // Output response\n  console.log(response.toString());\n}\n\nmain().catch(console.error);\n',l={},d="LlamaParse",c={id:"modules/data_loaders/llama_parse/index",title:"LlamaParse",description:"LlamaParse is an API created by llamaflowjs to efficiently parse files, e.g. it's great at converting PDF tables into markdown.",source:"@site/docs/modules/data_loaders/llama_parse/index.mdx",sourceDirName:"modules/data_loaders/llama_parse",slug:"/modules/data_loaders/llama_parse/",permalink:"/LlamaFlowJs/modules/data_loaders/llama_parse/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"Loader",permalink:"/LlamaFlowJs/modules/data_loaders/"},next:{title:"JSON Mode",permalink:"/LlamaFlowJs/modules/data_loaders/llama_parse/json_mode"}},h={},m=[{value:"Usage",id:"usage",level:2},{value:"Params",id:"params",level:3},{value:"General params:",id:"general-params",level:4},{value:"Advanced params:",id:"advanced-params",level:4},{value:"LlamaParse with SimpleDirectoryReader",id:"llamaparse-with-simpledirectoryreader",level:3},{value:"API Reference",id:"api-reference",level:2}];function p(e){const a={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h1,{id:"llamaparse",children:"LlamaParse"}),"\n",(0,r.jsx)(a.p,{children:"LlamaParse is an API created by llamaflowjs to efficiently parse files, e.g. it's great at converting PDF tables into markdown."}),"\n",(0,r.jsxs)(a.p,{children:["To use it, first login and get an API key from ",(0,r.jsx)(a.a,{href:"https://cloud.llamaflowjs.ai",children:"https://cloud.llamaflowjs.ai"}),". Make sure to store the key as ",(0,r.jsx)(a.code,{children:"apiKey"})," parameter or in the environment variable ",(0,r.jsx)(a.code,{children:"LLAMA_CLOUD_API_KEY"}),"."]}),"\n",(0,r.jsxs)(a.p,{children:["Official documentation for LlamaParse can be found ",(0,r.jsx)(a.a,{href:"https://docs.cloud.llamaflowjs.ai/",children:"here"}),"."]}),"\n",(0,r.jsx)(a.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)(a.p,{children:["You can then use the ",(0,r.jsx)(a.code,{children:"LlamaParseReader"})," class to load local files and convert them into a parsed document that can be used by llamaflowjs.\nSee ",(0,r.jsx)(a.a,{href:"https://github.com/LlamaFlowJs/LlamaFlowJs/blob/main/packages/llamaflowjs/src/readers/LlamaParseReader.ts",children:"LlamaParseReader.ts"})," for a list of supported file types:"]}),"\n",(0,r.jsx)(t.A,{language:"ts",children:i}),"\n",(0,r.jsx)(a.h3,{id:"params",children:"Params"}),"\n",(0,r.jsxs)(a.p,{children:["All options can be set with the ",(0,r.jsx)(a.code,{children:"LlamaParseReader"})," constructor."]}),"\n",(0,r.jsx)(a.p,{children:"They can be divided into two groups."}),"\n",(0,r.jsx)(a.h4,{id:"general-params",children:"General params:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"apiKey"})," is required. Can be set as an environment variable ",(0,r.jsx)(a.code,{children:"LLAMA_CLOUD_API_KEY"})]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"checkInterval"})," is the interval in seconds to check if the parsing is done. Default is ",(0,r.jsx)(a.code,{children:"1"}),"."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"maxTimeout"})," is the maximum timeout to wait for parsing to finish. Default is ",(0,r.jsx)(a.code,{children:"2000"})]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"verbose"})," shows progress of the parsing. Default is ",(0,r.jsx)(a.code,{children:"true"})]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"ignoreErrors"})," set to false to get errors while parsing. Default is ",(0,r.jsx)(a.code,{children:"true"})," and returns an empty array on error."]}),"\n"]}),"\n",(0,r.jsx)(a.h4,{id:"advanced-params",children:"Advanced params:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"resultType"})," can be set to ",(0,r.jsx)(a.code,{children:"markdown"}),", ",(0,r.jsx)(a.code,{children:"text"})," or ",(0,r.jsx)(a.code,{children:"json"}),". Defaults to ",(0,r.jsx)(a.code,{children:"text"}),". More information about ",(0,r.jsx)(a.code,{children:"json"})," mode on the next pages."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"language"})," primarily helps with OCR recognition. Defaults to ",(0,r.jsx)(a.code,{children:"en"}),". Click ",(0,r.jsx)(a.a,{href:"/LlamaFlowJs/api/type-aliases/Language",children:"here"})," for a list of supported languages."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"parsingInstructions?"})," Optional. Can help with complicated document structures. See this ",(0,r.jsx)(a.a,{href:"https://www.llamaflowjs.ai/blog/launching-the-first-genai-native-document-parsing-platform",children:"llamaflowjs Blog Post"})," for an example."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"skipDiagonalText?"})," Optional. Set to true to ignore diagonal text. (Text that is not rotated 0, 90, 180 or 270 degrees)"]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"invalidateCache?"})," Optional. Set to true to ignore the LlamaCloud cache. All document are kept in cache for 48hours after the job was completed to avoid processing the same document twice. Can be useful for testing when trying to re-parse the same document with, e.g. different ",(0,r.jsx)(a.code,{children:"parsingInstructions"}),"."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"doNotCache?"})," Optional. Set to true to not cache the document."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"fastMode?"})," Optional. Set to true to use the fast mode. This mode will skip OCR of images, and table/heading reconstruction. Note: Non-compatible with ",(0,r.jsx)(a.code,{children:"gpt4oMode"}),"."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"doNotUnrollColumns?"})," Optional. Set to true to keep the text according to document layout. Reduce reconstruction accuracy, and LLMs/embeddings performances in most cases."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"pageSeparator?"})," Optional. The page separator to use. Defaults is ",(0,r.jsx)(a.code,{children:"\\\\n---\\\\n"}),"."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"gpt4oMode"})," set to true to use GPT-4o to extract content. Default is ",(0,r.jsx)(a.code,{children:"false"}),"."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"gpt4oApiKey?"})," Optional. Set the GPT-4o API key. Lowers the cost of parsing by using your own API key. Your OpenAI account will be charged. Can also be set in the environment variable ",(0,r.jsx)(a.code,{children:"LLAMA_CLOUD_GPT4O_API_KEY"}),"."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"boundingBox?"})," Optional. Specify an area of the document to parse. Expects the bounding box margins as a string in clockwise order, e.g. ",(0,r.jsx)(a.code,{children:'boundingBox = "0.1,0,0,0"'})," to not parse the top 10% of the document."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"targetPages?"})," Optional. Specify which pages to parse by specifying them as a comma-separated list. First page is ",(0,r.jsx)(a.code,{children:"0"}),"."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"numWorkers"})," as in the python version, is set in ",(0,r.jsx)(a.code,{children:"SimpleDirectoryReader"}),". Default is 1."]}),"\n"]}),"\n",(0,r.jsx)(a.h3,{id:"llamaparse-with-simpledirectoryreader",children:"LlamaParse with SimpleDirectoryReader"}),"\n",(0,r.jsxs)(a.p,{children:["Below a full example of ",(0,r.jsx)(a.code,{children:"LlamaParse"})," integrated in ",(0,r.jsx)(a.code,{children:"SimpleDirectoryReader"})," with additional options."]}),"\n",(0,r.jsx)(t.A,{language:"ts",children:o}),"\n",(0,r.jsx)(a.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.a,{href:"/LlamaFlowJs/api/classes/SimpleDirectoryReader",children:"SimpleDirectoryReader"})}),"\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.a,{href:"/LlamaFlowJs/api/classes/LlamaParseReader",children:"LlamaParseReader"})}),"\n"]})]})}function u(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);