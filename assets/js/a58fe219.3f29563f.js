"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7204],{89503:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>r,metadata:()=>m,toc:()=>l});var s=t(65723),i=t(43327),o=t(15120),a=t(47106);const r={},d="Agents",m={id:"examples/agent",title:"Agents",description:"A built-in agent that can take decisions and reasoning based on the tools provided to it.",source:"@site/docs/examples/agent.mdx",sourceDirName:"examples",slug:"/examples/agent",permalink:"/LlamaFlowJs/examples/agent",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"Save/Load an Index",permalink:"/LlamaFlowJs/examples/save_load_index"},next:{title:"Gemini Agent",permalink:"/LlamaFlowJs/examples/agent_gemini"}},c={},l=[{value:"OpenAI Agent",id:"openai-agent",level:2}];function p(n){const e={h1:"h1",h2:"h2",p:"p",...(0,i.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"agents",children:"Agents"}),"\n",(0,s.jsx)(e.p,{children:"A built-in agent that can take decisions and reasoning based on the tools provided to it."}),"\n",(0,s.jsx)(e.h2,{id:"openai-agent",children:"OpenAI Agent"}),"\n","\n",(0,s.jsx)(o.A,{language:"ts",children:a.A})]})}function u(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(p,{...n})}):p(n)}},47106:(n,e,t)=>{t.d(e,{A:()=>s});const s='import { FunctionTool, OpenAIAgent } from "llamaflowjs";\n\nconst sumNumbers = FunctionTool.from(\n  ({ a, b }: { a: number; b: number }) => `${a + b}`,\n  {\n    name: "sumNumbers",\n    description: "Use this function to sum two numbers",\n    parameters: {\n      type: "object",\n      properties: {\n        a: {\n          type: "number",\n          description: "The first number",\n        },\n        b: {\n          type: "number",\n          description: "The second number",\n        },\n      },\n      required: ["a", "b"],\n    },\n  },\n);\n\nconst divideNumbers = FunctionTool.from(\n  ({ a, b }: { a: number; b: number }) => `${a / b}`,\n  {\n    name: "divideNumbers",\n    description: "Use this function to divide two numbers",\n    parameters: {\n      type: "object",\n      properties: {\n        a: {\n          type: "number",\n          description: "The dividend a to divide",\n        },\n        b: {\n          type: "number",\n          description: "The divisor b to divide by",\n        },\n      },\n      required: ["a", "b"],\n    },\n  },\n);\n\nasync function main() {\n  const agent = new OpenAIAgent({\n    tools: [sumNumbers, divideNumbers],\n  });\n\n  const response = await agent.chat({\n    message: "How much is 5 + 5? then divide by 2",\n  });\n\n  console.log(response.message);\n}\n\nvoid main().then(() => {\n  console.log("Done");\n});\n'}}]);