"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9155],{90932:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>l});var s=n(65723),o=n(43327);const t={},a="Cohere Reranker",i={id:"modules/node_postprocessors/cohere_reranker",title:"Cohere Reranker",description:"The Cohere Reranker is a postprocessor that uses the Cohere API to rerank the results of a search query.",source:"@site/docs/modules/node_postprocessors/cohere_reranker.md",sourceDirName:"modules/node_postprocessors",slug:"/modules/node_postprocessors/cohere_reranker",permalink:"/LlamaFlowJs/modules/node_postprocessors/cohere_reranker",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"Node Postprocessors",permalink:"/LlamaFlowJs/modules/node_postprocessors/"},next:{title:"Jina AI Reranker",permalink:"/LlamaFlowJs/modules/node_postprocessors/jinaai_reranker"}},c={},l=[{value:"Setup",id:"setup",level:2},{value:"Load and index documents",id:"load-and-index-documents",level:2},{value:"Increase similarity topK to retrieve more results",id:"increase-similarity-topk-to-retrieve-more-results",level:2},{value:"Create a new instance of the CohereRerank class",id:"create-a-new-instance-of-the-coherererank-class",level:2},{value:"Create a query engine with the retriever and node postprocessor",id:"create-a-query-engine-with-the-retriever-and-node-postprocessor",level:2},{value:"API Reference",id:"api-reference",level:2}];function d(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h1,{id:"cohere-reranker",children:"Cohere Reranker"}),"\n",(0,s.jsx)(r.p,{children:"The Cohere Reranker is a postprocessor that uses the Cohere API to rerank the results of a search query."}),"\n",(0,s.jsx)(r.h2,{id:"setup",children:"Setup"}),"\n",(0,s.jsxs)(r.p,{children:["Firstly, you will need to install the ",(0,s.jsx)(r.code,{children:"llamaflowjs"})," package."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"pnpm install llamaflowjs\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Now, you will need to sign up for an API key at ",(0,s.jsx)(r.a,{href:"https://cohere.ai/",children:"Cohere"}),". Once you have your API key you can import the necessary modules and create a new instance of the ",(0,s.jsx)(r.code,{children:"CohereRerank"})," class."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",children:'import {\n  CohereRerank,\n  Document,\n  OpenAI,\n  VectorStoreIndex,\n  Settings,\n} from "llamaflowjs";\n'})}),"\n",(0,s.jsx)(r.h2,{id:"load-and-index-documents",children:"Load and index documents"}),"\n",(0,s.jsx)(r.p,{children:"For this example, we will use a single document. In a real-world scenario, you would have multiple documents to index."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",children:'const document = new Document({ text: essay, id_: "essay" });\n\nSettings.llm = new OpenAI({ model: "gpt-3.5-turbo", temperature: 0.1 });\n\nconst index = await VectorStoreIndex.fromDocuments([document]);\n'})}),"\n",(0,s.jsx)(r.h2,{id:"increase-similarity-topk-to-retrieve-more-results",children:"Increase similarity topK to retrieve more results"}),"\n",(0,s.jsxs)(r.p,{children:["The default value for ",(0,s.jsx)(r.code,{children:"similarityTopK"})," is 2. This means that only the most similar document will be returned. To retrieve more results, you can increase the value of ",(0,s.jsx)(r.code,{children:"similarityTopK"}),"."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",children:"const retriever = index.asRetriever();\nretriever.similarityTopK = 5;\n"})}),"\n",(0,s.jsx)(r.h2,{id:"create-a-new-instance-of-the-coherererank-class",children:"Create a new instance of the CohereRerank class"}),"\n",(0,s.jsxs)(r.p,{children:["Then you can create a new instance of the ",(0,s.jsx)(r.code,{children:"CohereRerank"})," class and pass in your API key and the number of results you want to return."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",children:'const nodePostprocessor = new CohereRerank({\n  apiKey: "<COHERE_API_KEY>",\n  topN: 4,\n});\n'})}),"\n",(0,s.jsx)(r.h2,{id:"create-a-query-engine-with-the-retriever-and-node-postprocessor",children:"Create a query engine with the retriever and node postprocessor"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ts",children:'const queryEngine = index.asQueryEngine({\n  retriever,\n  nodePostprocessors: [nodePostprocessor],\n});\n\n// log the response\nconst response = await queryEngine.query("Where did the author grown up?");\n'})}),"\n",(0,s.jsx)(r.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"/LlamaFlowJs/api/classes/CohereRerank",children:"CohereRerank"})}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},43327:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>i});var s=n(22155);const o={},t=s.createContext(o);function a(e){const r=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(t.Provider,{value:r},e.children)}}}]);