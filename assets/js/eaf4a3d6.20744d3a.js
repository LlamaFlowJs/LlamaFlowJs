"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9817],{49681:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>c,default:()=>b,frontMatter:()=>u,metadata:()=>d,toc:()=>h});var r=t(65723),a=t(43327),s=t(82468),i=t(29753),l=t(15120),o=t(47106);const u={sidebar_position:4},c="Agent tutorial",d={id:"getting_started/starter_tutorial/agent",title:"Agent tutorial",description:"We have a comprehensive, step-by-step guide to building agents in llamaflowjs that we recommend to learn what agents are and how to build them for production. But building a basic agent is simple:",source:"@site/docs/getting_started/starter_tutorial/agent.mdx",sourceDirName:"getting_started/starter_tutorial",slug:"/getting_started/starter_tutorial/agent",permalink:"/getting_started/starter_tutorial/agent",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"mySidebar",previous:{title:"Structured data extraction tutorial",permalink:"/getting_started/starter_tutorial/structured_data_extraction"},next:{title:"Environments",permalink:"/getting_started/environments"}},p={},h=[{value:"Set up",id:"set-up",level:2},{value:"Run agent",id:"run-agent",level:2}];function m(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"agent-tutorial",children:"Agent tutorial"}),"\n",(0,r.jsxs)(n.p,{children:["We have a comprehensive, step-by-step ",(0,r.jsx)(n.a,{href:"../../guides/agents/setup",children:"guide to building agents in llamaflowjs"})," that we recommend to learn what agents are and how to build them for production. But building a basic agent is simple:"]}),"\n",(0,r.jsx)(n.h2,{id:"set-up",children:"Set up"}),"\n",(0,r.jsx)(n.p,{children:"In a new folder:"}),"\n",(0,r.jsxs)(s.A,{groupId:"npm2yarn",children:[(0,r.jsx)(i.A,{value:"npm",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm init\nnpm install -D typescript @types/node\n"})})}),(0,r.jsx)(i.A,{value:"yarn",label:"Yarn",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"yarn init\nyarn add --dev typescript @types/node\n"})})}),(0,r.jsx)(i.A,{value:"pnpm",label:"pnpm",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pnpm init\npnpm add -D typescript @types/node\n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"run-agent",children:"Run agent"}),"\n",(0,r.jsxs)(n.p,{children:["Create the file ",(0,r.jsx)(n.code,{children:"example.ts"}),". This code will:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Create two tools for use by the agent:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.code,{children:"sumNumbers"})," tool that adds two numbers"]}),"\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.code,{children:"divideNumbers"})," tool that divides numbers"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{}),"\n",(0,r.jsx)(n.li,{children:"Give an example of the data structure we wish to generate"}),"\n",(0,r.jsx)(n.li,{children:"Prompt the LLM with instructions and the example, plus a sample transcript"}),"\n"]}),"\n",(0,r.jsx)(l.A,{language:"ts",children:o.A}),"\n",(0,r.jsx)(n.p,{children:"To run the code:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx tsx example.ts\n"})}),"\n",(0,r.jsx)(n.p,{children:"You should expect output something like:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"{\n  content: 'The sum of 5 + 5 is 10. When you divide 10 by 2, you get 5.',\n  role: 'assistant',\n  options: {}\n}\nDone\n"})})]})}function b(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},29753:(e,n,t)=>{t.d(n,{A:()=>i});t(22155);var r=t(70851);const a={tabItem:"tabItem_Ge7D"};var s=t(65723);function i(e){let{children:n,hidden:t,className:i}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,i),hidden:t,children:n})}},82468:(e,n,t)=>{t.d(n,{A:()=>w});var r=t(22155),a=t(70851),s=t(32490),i=t(62934),l=t(20189),o=t(38719),u=t(64228),c=t(94040);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}(t);return function(e){const n=(0,u.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const a=(0,i.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})}),[s,a])]}function b(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,s=p(e),[i,o]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:s}))),[u,d]=m({queryString:t,groupId:a}),[b,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,s]=(0,c.Dv)(t);return[a,(0,r.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:a}),f=(()=>{const e=u??b;return h({value:e,tabValues:s})?e:null})();(0,l.A)((()=>{f&&o(f)}),[f]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),g(e)}),[d,g,s]),tabValues:s}}var g=t(47519);const f={tabList:"tabList_pGhr",tabItem:"tabItem_hSrI"};var v=t(65723);function x(e){let{className:n,block:t,selectedValue:r,selectValue:i,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:u}=(0,s.a_)(),c=e=>{const n=e.currentTarget,t=o.indexOf(n),a=l[t].value;a!==r&&(u(n),i(a))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>o.push(e),onKeyDown:d,onClick:c,...s,className:(0,a.A)("tabs__item",f.tabItem,s?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function j(e){let{lazy:n,children:t,selectedValue:a}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function y(e){const n=b(e);return(0,v.jsxs)("div",{className:(0,a.A)("tabs-container",f.tabList),children:[(0,v.jsx)(x,{...n,...e}),(0,v.jsx)(j,{...n,...e})]})}function w(e){const n=(0,g.A)();return(0,v.jsx)(y,{...e,children:d(e.children)},String(n))}},47106:(e,n,t)=>{t.d(n,{A:()=>r});const r='import { FunctionTool, OpenAIAgent } from "llamaflowjs";\n\nconst sumNumbers = FunctionTool.from(\n  ({ a, b }: { a: number; b: number }) => `${a + b}`,\n  {\n    name: "sumNumbers",\n    description: "Use this function to sum two numbers",\n    parameters: {\n      type: "object",\n      properties: {\n        a: {\n          type: "number",\n          description: "The first number",\n        },\n        b: {\n          type: "number",\n          description: "The second number",\n        },\n      },\n      required: ["a", "b"],\n    },\n  },\n);\n\nconst divideNumbers = FunctionTool.from(\n  ({ a, b }: { a: number; b: number }) => `${a / b}`,\n  {\n    name: "divideNumbers",\n    description: "Use this function to divide two numbers",\n    parameters: {\n      type: "object",\n      properties: {\n        a: {\n          type: "number",\n          description: "The dividend a to divide",\n        },\n        b: {\n          type: "number",\n          description: "The divisor b to divide by",\n        },\n      },\n      required: ["a", "b"],\n    },\n  },\n);\n\nasync function main() {\n  const agent = new OpenAIAgent({\n    tools: [sumNumbers, divideNumbers],\n  });\n\n  const response = await agent.chat({\n    message: "How much is 5 + 5? then divide by 2",\n  });\n\n  console.log(response.message);\n}\n\nvoid main().then(() => {\n  console.log("Done");\n});\n'}}]);