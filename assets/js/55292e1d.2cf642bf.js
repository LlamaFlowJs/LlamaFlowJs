"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2838],{10538:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>d,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var r=t(65723),a=t(43327);const s={sidebar_position:4},d="NodeParser",o={id:"modules/node_parser",title:"NodeParser",description:"The NodeParser in llamaflowjs is responsible for splitting Document objects into more manageable Node objects. When you call .fromDocuments(), the NodeParser from the Settings is used to do this automatically for you. Alternatively, you can use it to split documents ahead of time.",source:"@site/docs/modules/node_parser.md",sourceDirName:"modules",slug:"/modules/node_parser",permalink:"/modules/node_parser",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"mySidebar",previous:{title:"Index",permalink:"/modules/data_index"},next:{title:"Retriever",permalink:"/modules/retriever"}},i={},l=[{value:"TextSplitter",id:"textsplitter",level:2},{value:"MarkdownNodeParser",id:"markdownnodeparser",level:2},{value:"API Reference",id:"api-reference",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"nodeparser",children:"NodeParser"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"NodeParser"})," in llamaflowjs is responsible for splitting ",(0,r.jsx)(n.code,{children:"Document"})," objects into more manageable ",(0,r.jsx)(n.code,{children:"Node"})," objects. When you call ",(0,r.jsx)(n.code,{children:".fromDocuments()"}),", the ",(0,r.jsx)(n.code,{children:"NodeParser"})," from the ",(0,r.jsx)(n.code,{children:"Settings"})," is used to do this automatically for you. Alternatively, you can use it to split documents ahead of time."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import { Document, SimpleNodeParser } from "llamaflowjs";\n\nconst nodeParser = new SimpleNodeParser();\n\nSettings.nodeParser = nodeParser;\n'})}),"\n",(0,r.jsx)(n.h2,{id:"textsplitter",children:"TextSplitter"}),"\n",(0,r.jsx)(n.p,{children:"The underlying text splitter will split text by sentences. It can also be used as a standalone module for splitting raw text."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import { SentenceSplitter } from "llamaflowjs";\n\nconst splitter = new SentenceSplitter({ chunkSize: 1 });\n\nconst textSplits = splitter.splitText("Hello World");\n'})}),"\n",(0,r.jsx)(n.h2,{id:"markdownnodeparser",children:"MarkdownNodeParser"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"MarkdownNodeParser"})," is a more advanced ",(0,r.jsx)(n.code,{children:"NodeParser"})," that can handle markdown documents. It will split the markdown into nodes and then parse the nodes into a ",(0,r.jsx)(n.code,{children:"Document"})," object."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import { MarkdownNodeParser } from "llamaflowjs";\n\nconst nodeParser = new MarkdownNodeParser();\n\nconst nodes = nodeParser.getNodesFromDocuments([\n  new Document({\n    text: `# Main Header\nMain content\n\n# Header 2\nHeader 2 content\n\n## Sub-header\nSub-header content\n\n  `,\n  }),\n]);\n'})}),"\n",(0,r.jsx)(n.p,{children:"The output metadata will be something like:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"[\n  TextNode {\n    id_: '008e41a8-b097-487c-bee8-bd88b9455844',\n    metadata: { 'Header 1': 'Main Header' },\n    excludedEmbedMetadataKeys: [],\n    excludedLlmMetadataKeys: [],\n    relationships: { PARENT: [Array] },\n    hash: 'KJ5e/um/RkHaNR6bonj9ormtZY7I8i4XBPVYHXv1A5M=',\n    text: 'Main Header\\nMain content',\n    textTemplate: '',\n    metadataSeparator: '\\n'\n  },\n  TextNode {\n    id_: '0f5679b3-ba63-4aff-aedc-830c4208d0b5',\n    metadata: { 'Header 1': 'Header 2' },\n    excludedEmbedMetadataKeys: [],\n    excludedLlmMetadataKeys: [],\n    relationships: { PARENT: [Array] },\n    hash: 'IP/g/dIld3DcbK+uHzDpyeZ9IdOXY4brxhOIe7wc488=',\n    text: 'Header 2\\nHeader 2 content',\n    textTemplate: '',\n    metadataSeparator: '\\n'\n  },\n  TextNode {\n    id_: 'e81e9bd0-121c-4ead-8ca7-1639d65fdf90',\n    metadata: { 'Header 1': 'Header 2', 'Header 2': 'Sub-header' },\n    excludedEmbedMetadataKeys: [],\n    excludedLlmMetadataKeys: [],\n    relationships: { PARENT: [Array] },\n    hash: 'B3kYNnxaYi9ghtAgwza0ZEVKF4MozobkNUlcekDL7JQ=',\n    text: 'Sub-header\\nSub-header content',\n    textTemplate: '',\n    metadataSeparator: '\\n'\n  }\n]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/classes/SimpleNodeParser",children:"SimpleNodeParser"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/classes/SentenceSplitter",children:"SentenceSplitter"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/api/classes/MarkdownNodeParser",children:"MarkdownNodeParser"})}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},43327:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>o});var r=t(22155);const a={},s=r.createContext(a);function d(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);